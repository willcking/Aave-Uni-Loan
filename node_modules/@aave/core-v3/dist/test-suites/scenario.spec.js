"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = __importDefault(require("fs"));
const test_1 = __importDefault(require("@aave/deploy-v3/dist/markets/test"));
const actions_1 = require("./helpers/actions");
const calculations_1 = require("./helpers/utils/calculations");
const make_suite_1 = require("./helpers/make-suite");
const scenario_engine_1 = require("./helpers/scenario-engine");
const scenarioFolder = './test-suites/helpers/scenarios/';
const selectedScenarios = []; //"borrow-repay-stable-edge.json", "borrow-repay-stable.json"];
fs_1.default.readdirSync(scenarioFolder).forEach((file) => {
    if (selectedScenarios.length > 0 && !selectedScenarios.includes(file))
        return;
    const scenario = require(`./helpers/scenarios/${file}`);
    (0, make_suite_1.makeSuite)(scenario.title, async (testEnv) => {
        before('Initializing configuration', async () => {
            actions_1.configuration.skipIntegrityCheck = false; //set this to true to execute solidity-coverage
            calculations_1.configuration.reservesParams = test_1.default.ReservesConfig;
        });
        for (const story of scenario.stories) {
            it(story.description, async function () {
                // Retry the test scenarios up to 4 times in case random HEVM network errors happen
                //this.retries(4);
                await (0, scenario_engine_1.executeStory)(story, testEnv);
            });
        }
    });
});
